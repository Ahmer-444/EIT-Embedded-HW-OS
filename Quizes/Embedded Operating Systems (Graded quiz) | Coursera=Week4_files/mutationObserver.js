define("js/vendor/mutationObserver.v0.3.1.amd",["require"],function(require){window.MutationObserver=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver||function(t){"use strict";function MutationObserver(t){this._watched=[],this._listener=t}function startMutationChecker(t){!function check(){var e=t.takeRecords();e.length&&t._listener(e,t),t._timeout=setTimeout(check,MutationObserver._period)}()}function MutationRecord(r){var n={type:null,target:null,addedNodes:[],removedNodes:[],previousSibling:null,nextSibling:null,attributeName:null,attributeNamespace:null,oldValue:null};for(var e in r)has(n,e)&&r[e]!==t&&(n[e]=r[e]);return n}function createMutationSearcher(e,t){var r=clone(e,t);return function(n){var i=n.length,a;t.attr&&r.attr&&findAttributeMutations(n,e,r.attr,t.afilter),(t.kids||t.descendents)&&(a=searchSubtree(n,e,r,t)),(a||n.length!==i)&&(r=clone(e,t))}}function findAttributeMutations(a,n,e,i){for(var u={},o=n.attributes,r,t,d=o.length;d--;)r=o[d],t=r.name,(!i||has(i,t))&&(r.value!==e[t]&&a.push(MutationRecord({type:"attributes",target:n,attributeName:t,oldValue:e[t],attributeNamespace:r.namespaceURI})),u[t]=!0);for(t in e)u[t]||a.push(MutationRecord({target:n,type:"attributes",attributeName:t,oldValue:e[t]}))}function searchSubtree(r,a,i,e){function resolveConflicts(i,d,s,l,c){for(var u=i.length-1,o=-~((u-c)/2),t,n,a;a=i.pop();)t=s[a.i],n=l[a.j],e.kids&&o&&Math.abs(a.i-a.j)>=u&&(r.push(MutationRecord({type:"childList",target:d,addedNodes:[t],removedNodes:[t],nextSibling:t.nextSibling,previousSibling:t.previousSibling})),o--),e.attr&&n.attr&&findAttributeMutations(r,t,n.attr,e.afilter),e.charData&&3===t.nodeType&&t.nodeValue!==n.charData&&r.push(MutationRecord({type:"characterData",target:t})),e.descendents&&findMutations(t,n)}function findMutations(v,g){for(var c=v.childNodes,o=g.kids,y=c.length,m=o?o.length:0,h,s,b,f,i,a,l,p=0,d=0,u=0;y>d||m>u;)a=c[d],i=o[u],l=i&&i.node,a===l?(e.attr&&i.attr&&findAttributeMutations(r,a,i.attr,e.afilter),e.charData&&i.charData!==t&&a.nodeValue!==i.charData&&r.push(MutationRecord({type:"characterData",target:a})),s&&resolveConflicts(s,v,c,o,p),e.descendents&&(a.childNodes.length||i.kids&&i.kids.length)&&findMutations(a,i),d++,u++):(n=!0,h||(h={},s=[]),a&&(h[b=getElementId(a)]||(h[b]=!0,-1===(f=indexOfCustomNode(o,a,u))?e.kids&&(r.push(MutationRecord({type:"childList",target:v,addedNodes:[a],nextSibling:a.nextSibling,previousSibling:a.previousSibling})),p++):s.push({i:d,j:f})),d++),l&&l!==c[d]&&(h[b=getElementId(l)]||(h[b]=!0,-1===(f=indexOf(c,l,d))?e.kids&&(r.push(MutationRecord({type:"childList",target:g.node,removedNodes:[l],nextSibling:o[u+1],previousSibling:o[u-1]})),p--):s.push({i:f,j:u})),u++));s&&resolveConflicts(s,v,c,o,p)}var n;return findMutations(a,i),n}function clone(r,t){var e=!0;return function copy(r){var n={node:r};return!t.charData||3!==r.nodeType&&8!==r.nodeType?(t.attr&&e&&1===r.nodeType&&(n.attr=reduce(r.attributes,function(r,e){return(!t.afilter||t.afilter[e.name])&&(r[e.name]=e.value),r},{})),e&&(t.kids||t.charData||t.attr&&t.descendents)&&(n.kids=map(r.childNodes,copy)),e=t.descendents):n.charData=r.nodeValue,n}(r)}function indexOfCustomNode(t,e,r){return indexOf(t,e,r,JSCompiler_renameProperty("node"))}function getElementId(t){try{return t.id||(t[r]=t[r]||e++)}catch(n){try{return t.nodeValue}catch(a){return e++}}}function map(e,n){for(var r=[],t=0;t<e.length;t++)r[t]=n(e[t],t,e);return r}function reduce(e,n,r){for(var t=0;t<e.length;t++)r=n(r,e[t],t,e);return r}function indexOf(e,n,t,r){for(;t<e.length;t++)if((r?e[t][r]:e[t])===n)return t;return-1}function has(e,r){return e[r]!==t}function JSCompiler_renameProperty(t){return t}MutationObserver._period=30,MutationObserver.prototype={observe:function(n,t){for(var a={attr:!!(t.attributes||t.attributeFilter||t.attributeOldValue),kids:!!t.childList,descendents:!!t.subtree,charData:!(!t.characterData&&!t.characterDataOldValue)},e=this._watched,r=0;r<e.length;r++)e[r].tar===n&&e.splice(r,1);t.attributeFilter&&(a.afilter=reduce(t.attributeFilter,function(t,e){return t[e]=!0,t},{})),e.push({tar:n,fn:createMutationSearcher(n,a)}),this._timeout||startMutationChecker(this)},takeRecords:function(){for(var e=[],r=this._watched,t=0;t<r.length;t++)r[t].fn(e);return e},disconnect:function(){this._watched=[],clearTimeout(this._timeout),this._timeout=null}};var e=1,r="mo_id";return MutationObserver}(void 0)});