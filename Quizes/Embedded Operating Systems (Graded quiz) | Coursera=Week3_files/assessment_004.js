define("pages/open-course/assessment/models/exam/assessment",["require","exports","module","backbone-associations","underscore","pages/open-course/assessment/models/exam/evaluation","pages/open-course/assessment/models/relativePassingStates","pages/open-course/common/data/exam/assessmentData"],function(require,exports,module){"use strict";var Backbone=require("backbone-associations"),_=require("underscore"),t=require("pages/open-course/assessment/models/exam/evaluation"),e=require("pages/open-course/assessment/models/relativePassingStates"),s=require("pages/open-course/common/data/exam/assessmentData"),i=Backbone.AssociatedModel.extend({defaults:{metadata:null,bestEvaluation:null,bestSessionId:null,bestPendingVerifiedEvaluation:null,bestPendingVerifiedSessionId:null,bestVerifiedEvaluation:null,bestVerifiedSessionId:null,lastEvaluation:null,lastSessionId:null,unsubmittedSessionId:null,examLockBufferTime:3e3,allowedSubmissionsPerInterval:null,allowedSubmissionsInterval:null},relations:[{type:Backbone.Associations.One,key:"lastEvaluation",relatedModel:t},{type:Backbone.Associations.One,key:"bestEvaluation",relatedModel:t},{type:Backbone.Associations.One,key:"bestPendingVerifiedEvaluation",relatedModel:t},{type:Backbone.Associations.One,key:"bestVerifiedEvaluation",relatedModel:t}],initialize:function initialize(e){if(!e||!e.metadata)throw new Error("metadata is required to instantiate this model");this.set("metadata",e.metadata)},hasUnsubmittedAttempt:function hasUnsubmittedAttempt(){return null!==this.get("unsubmittedSessionId")},hasSubmittedAttempt:function hasSubmittedAttempt(){return null!==this.get("lastEvaluation")},isLastAttemptBeforeLock:function isLastAttemptBeforeLock(){var e=(new Date).getTime();return this.get("locksIfSubmittedBefore")>e},examIsLocked:function examIsLocked(){var e=(new Date).getTime();return this.getNextPossibleSessionCreationTime()>e},getNextPossibleSessionCreationTime:function getNextPossibleSessionCreationTime(){return this.get("nextPossibleSessionCreationTime")+this.get("examLockBufferTime")},getQuestionCount:function getQuestionCount(){return this.get("metadata").getDefinition("questionCount")},isPassed:function isPassed(){var e=this.get("bestEvaluation");return e&&e.isPassed()},isPendingPassed:function isPendingPassed(){var e=this.get("bestPendingVerifiedEvaluation");return e&&e.isPassed()},isVerifiedPassed:function isVerifiedPassed(){var e=this.get("bestVerifiedEvaluation");return e&&e.isPassed()},getMinimumPassingScore:function getMinimumPassingScore(){return Math.ceil(this.getPassingFraction()*this.getQuestionCount())},getLastSubmittedAttempt:function getLastSubmittedAttempt(){return this.get("lastSessionId")},getPassingFraction:function getPassingFraction(){return this.get("metadata").getDefinition("passingFraction")},getDisplayPassingPercent:function getDisplayPassingPercent(){return Math.round(100*this.getPassingFraction())+"%"},getRelativePassingState:function getRelativePassingState(t){return t.shouldPromptForVerification()?this.isVerifiedPassed()?e.passed:this.isPendingPassed()?e.passedVerificationPending:this.isPassed()?e.passedUnverified:e.notPassed:this.isPassed()?e.passed:e.notPassed},getDisplayEvaluation:function getDisplayEvaluation(e){return e.shouldPromptForVerification()?this.isVerifiedPassed()?this.get("bestVerifiedEvaluation"):this.isPendingPassed()?this.get("bestPendingVerifiedEvaluation"):this.isPassed()?this.get("bestEvaluation"):this.get("bestEvaluation"):this.get("bestEvaluation")}}),n=function loadAssessmentContent(e){return s(e.metadata).then(function(t){return new i(_(t).extend(e))})};module.exports=n});